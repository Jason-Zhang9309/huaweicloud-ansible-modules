---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://www.github.com/huaweicloud/magic-modules
#
# ----------------------------------------------------------------------------
# Pre-test setup
- name: create a vpc
  hwc_network_vpc:
    cidr: "192.168.0.0/16"
    name: "ansible_network_vpc_test_local"
    state: present
  register: vpc1
- name: create a vpc
  hwc_network_vpc:
    cidr: "192.168.0.0/16"
    name: "ansible_network_vpc_test_peering"
    state: present
  register: vpc2
- name: delete a peering connect
  hwc_vpc_peering_connect:
    local_vpc_id: "{{ vpc1.id }}"
    name: "ansible_network_peering_test"
    filters:
      - "name"
    peering_vpc:
      vpc_id: "{{ vpc2.id }}"
    state: absent
#----------------------------------------------------------
- name: create a peering connect
  hwc_vpc_peering_connect:
    local_vpc_id: "{{ vpc1.id }}"
    name: "ansible_network_peering_test"
    filters:
      - "name"
    peering_vpc:
      vpc_id: "{{ vpc2.id }}"
    state: present
  register: result
- name: assert changed is true
  assert:
    that:
      result is changed
# ----------------------------------------------------------------------------
- name: create a peering connect that already exists
  hwc_vpc_peering_connect:
    local_vpc_id: "{{ vpc1.id }}"
    name: "ansible_network_peering_test"
    filters:
      - "name"
    peering_vpc:
      vpc_id: "{{ vpc2.id }}"
    state: present
  register: result
- name: assert changed is false
  assert:
    that:
      - result.failed == 0
      - result.changed == false
#----------------------------------------------------------
- name: delete a peering connect
  hwc_vpc_peering_connect:
    local_vpc_id: "{{ vpc1.id }}"
    name: "ansible_network_peering_test"
    filters:
      - "name"
    peering_vpc:
      vpc_id: "{{ vpc2.id }}"
    state: absent
  register: result
- name: assert changed is true
  assert:
    that:
      result is changed
# ----------------------------------------------------------------------------
- name: delete a peering connect that does not exist
  hwc_vpc_peering_connect:
    local_vpc_id: "{{ vpc1.id }}"
    name: "ansible_network_peering_test"
    filters:
      - "name"
    peering_vpc:
      vpc_id: "{{ vpc2.id }}"
    state: absent
  register: result
- name: assert changed is false
  assert:
    that:
      - result.failed == 0
      - result.changed == false
#---------------------------------------------------------
# Post-test teardown
- name: delete a vpc
  hwc_network_vpc:
    cidr: "192.168.0.0/16"
    name: "ansible_network_vpc_test_peering"
    state: absent
  register: vpc2
- name: delete a vpc
  hwc_network_vpc:
    cidr: "192.168.0.0/16"
    name: "ansible_network_vpc_test_local"
    state: absent
  register: vpc1
